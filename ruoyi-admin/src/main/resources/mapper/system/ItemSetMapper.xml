<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ItemSetMapper">
    
    <resultMap type="ItemSet" id="ItemSetResult">
        <result property="itemSetId"    column="item_set_id"    />
        <result property="itemSetName"    column="item_set_name"    />
        <result property="principalId"    column="principal_id"    />
        <result property="principalName"    column="principal_name"    />
        <result property="budget"    column="budget"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="description"    column="description"    />
        <result property="state"    column="state"    />
    </resultMap>

    <sql id="selectItemSetVo">
        select item_set_id, item_set_name, principal_id, principal_name, budget, start_time, end_time, description, state from item_set
    </sql>

    <select id="selectItemSetList" parameterType="ItemSet" resultMap="ItemSetResult">
        <include refid="selectItemSetVo"/>
        <where>  
            <if test="itemSetName != null  and itemSetName != ''"> and item_set_name like concat('%', #{itemSetName}, '%')</if>
            <if test="principalName != null  and principalName != ''"> and principal_name like concat('%', #{principalName}, '%')</if>
            <if test="startTime != null  and startTime != ''"> and start_time = #{startTime}</if>
            <if test="endTime != null  and endTime != ''"> and end_time = #{endTime}</if>
            <if test="state != null "> and state = #{state}</if>
        </where>
    </select>
    
    <select id="selectItemSetByItemSetId" parameterType="Long" resultMap="ItemSetResult">
        <include refid="selectItemSetVo"/>
        where item_set_id = #{itemSetId}
    </select>
        
    <insert id="insertItemSet" parameterType="ItemSet" useGeneratedKeys="true" keyProperty="itemSetId">
        insert into item_set
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="itemSetName != null">item_set_name,</if>
            <if test="principalId != null">principal_id,</if>
            <if test="principalName != null">principal_name,</if>
            <if test="budget != null">budget,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="description != null">description,</if>
            <if test="state != null">state,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="itemSetName != null">#{itemSetName},</if>
            <if test="principalId != null">#{principalId},</if>
            <if test="principalName != null">#{principalName},</if>
            <if test="budget != null">#{budget},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="description != null">#{description},</if>
            <if test="state != null">#{state},</if>
         </trim>
    </insert>

    <update id="updateItemSet" parameterType="ItemSet">
        update item_set
        <trim prefix="SET" suffixOverrides=",">
            <if test="itemSetName != null">item_set_name = #{itemSetName},</if>
            <if test="principalId != null">principal_id = #{principalId},</if>
            <if test="principalName != null">principal_name = #{principalName},</if>
            <if test="budget != null">budget = #{budget},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="description != null">description = #{description},</if>
            <if test="state != null">state = #{state},</if>
        </trim>
        where item_set_id = #{itemSetId}
    </update>

    <delete id="deleteItemSetByItemSetId" parameterType="Long">
        delete from item_set where item_set_id = #{itemSetId}
    </delete>

    <delete id="deleteItemSetByItemSetIds" parameterType="String">
        delete from item_set where item_set_id in 
        <foreach item="itemSetId" collection="array" open="(" separator="," close=")">
            #{itemSetId}
        </foreach>
    </delete>
</mapper>